class Solution {
    public int climbStairs(int n) {
        int[] meno = new int [n+1];
        int ans=helper(n,meno);
        return ans; 
        // int [] dp =new int [n+1];
        //  for(int i=0;i<=n;i++){
        //     if(i==0||i==1){
        //     dp[i]=1;
        //     continue;
        //     }
        //     dp[i]=dp[i-1]+dp[i-2];
        //  }
        //  return dp[n];

    }
    public static int helper(int n,int [] meno){
        if(n==0) return 1;
        if(n<0) return 0;
        if(meno[n]!=0) return meno[n];
        int la=helper(n-1,meno);
        int ra=helper(n-2,meno);

        meno[n]=la+ra; 

        return (la+ra);
    }
 public static int helper_tab(int n,int [] meno){
        if(n==0) return 1;
        if(n<0) return 0;

        if(meno[n]!=0) return meno[n];

        int la=helper_tab(n-1,meno);
        int ra=helper_tab(n-2,meno);
        
        meno[n]=la+ra;

        return (la+ra);

}
}